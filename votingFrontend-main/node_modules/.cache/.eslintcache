[{"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\index.js":"1","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\Routes.js":"2","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Home.js":"3","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Results.js":"4","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\user\\Signup.js":"5","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Vote.js":"6","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\user\\Signin.js":"7","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\transaction\\Transaction.js":"8","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\backend.js":"9","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\ErrorMessage.js":"10","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Base.js":"11","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\transaction\\TxList.js":"12","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\TxList.js":"13","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\transaction\\ErrorMessage.js":"14","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\helper\\coreapicalls.js":"15","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\helper\\ImageHelper.js":"16","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\auth\\helper\\index.js":"17","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Menu.js":"18"},{"size":155,"mtime":1679152188443,"results":"19","hashOfConfig":"20"},{"size":806,"mtime":1679152188400,"results":"21","hashOfConfig":"20"},{"size":620,"mtime":1679152188712,"results":"22","hashOfConfig":"20"},{"size":1567,"mtime":1679152188759,"results":"23","hashOfConfig":"20"},{"size":6507,"mtime":1679152189239,"results":"24","hashOfConfig":"20"},{"size":6332,"mtime":1679152188801,"results":"25","hashOfConfig":"20"},{"size":3107,"mtime":1679152189215,"results":"26","hashOfConfig":"20"},{"size":2998,"mtime":1679152189128,"results":"27","hashOfConfig":"20"},{"size":50,"mtime":1679152188422,"results":"28","hashOfConfig":"20"},{"size":857,"mtime":1679152188688,"results":"29","hashOfConfig":"20"},{"size":987,"mtime":1679152188667,"results":"30","hashOfConfig":"20"},{"size":417,"mtime":1679152189152,"results":"31","hashOfConfig":"20"},{"size":417,"mtime":1679152188781,"results":"32","hashOfConfig":"20"},{"size":857,"mtime":1679152189101,"results":"33","hashOfConfig":"20"},{"size":997,"mtime":1679152188872,"results":"34","hashOfConfig":"20"},{"size":871,"mtime":1679152188850,"results":"35","hashOfConfig":"20"},{"size":1376,"mtime":1679241203136,"results":"36","hashOfConfig":"20"},{"size":1846,"mtime":1679152188736,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nt2uw",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\index.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\Routes.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Home.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Results.js",["96"],[],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Redirect } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { results } from \"./helper/coreapicalls\";\nimport ImageHelper from \"./helper/ImageHelper\";\n\n\n\n\nconst Results = () => {\n    const [arr, setArr] = useState([]);\n    const load = () => {\n        results(\"45123\").then((data) => {\n            setArr(data.data);\n        })\n    }\n    useEffect(() => {\n        load();\n    }, [])\n    const card = (candidate, party, constituency, votes) => {\n        return (\n            <div style={{ background: \"#000000\" }} className=\"card text-white border border-light\">\n                <ImageHelper name={party} />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-warning\">CandidateID: {candidate}</h5>\n                    <p className=\"card-text\">Party: {party}</p>\n                    <p className=\"card-text\">Constituency: {constituency}</p>\n                    <p className=\"card-text\">Votes: {votes}</p>\n\n\n                    <div className=\"d-grid gap-2 d-md-flex mt-3\">\n\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n    return (\n        <Base title=\"Results Page\" description=\"A page for user to view results\">\n            <div className=\"row\">{arr.map((value, index) => {\n                return <div key={index} className=\"col-3\">{card(value.candidate, value.party, value.constituency, value.votes)}</div>\n            })}</div>\n\n        </Base>\n    );\n};\n\nexport default Results;","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\user\\Signup.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Vote.js",["97"],[],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { party, vote } from \"./helper/coreapicalls\";\nimport { ethers } from \"ethers\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport TxList from \"./TxList\";\nimport { useEffect } from \"react\";\n\nconst startPayment = async ({ setError, setTxs, ether, addr }) => {\n    console.log(2)\n    try {\n        if (!window.ethereum)\n            throw new Error(\"No crypto wallet found. Please install it.\");\n\n        await window.ethereum.send(\"eth_requestAccounts\");\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        ethers.utils.getAddress(addr);\n        const tx = await signer.sendTransaction({\n            to: addr,\n            value: ethers.utils.parseEther(ether)\n        });\n        console.log({ ether, addr });\n        console.log(\"tx\", tx);\n        setTxs([tx]);\n    } catch (err) {\n        setError(err.message);\n    }\n};\n\nconst Vote = () => {\n    const user = isAutheticated().result;\n    const [arr, setArr] = useState([]);\n    const load = () => {\n        party(user.voterID).then(data => {\n            setArr(data.data);\n        });\n    }\n    useEffect(() => {\n        load();\n    }, [])\n    const [error, setError] = useState();\n    const [txs, setTxs] = useState([]);\n    const [values, setValues] = useState({\n        voterID: \"105\",\n        electionID: \"45123\",\n        candidateID: \"100256\",\n        candidateAdd: \"0x430252D122aFF94e9F4549c5625070034DfA24F6\",\n        error: false,\n        loading: false,\n    });\n    const { voterID, electionID, candidateID, candidateAdd } = values;\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n    const errorMessage = () => {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6  text-left\">\n                    <div\n                        className=\"alert alert-danger\"\n                        style={{ display: values.error ? \"\" : \"none\" }}\n                    >\n                        {values.error}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        setValues({ ...values, error: false, loading: true });\n        setError();\n        vote({ voterID, electionID, candidateID }).then(data => {\n            console.log(data, \"hmm\");\n            if (data.success === 0) {\n                console.log(\"fail\", data.message.code)\n                setValues({ ...values, error: data.message.code, loading: false });\n\n            } else {\n                console.log(\"success\")\n                setValues({\n                    ...values, error: false, loading: false\n                });\n                startPayment({\n                    setError,\n                    setTxs,\n                    ether: \"0.01\",\n                    addr: candidateAdd\n                });\n            }\n        }).catch((err) => {\n            console.log(err)\n        });\n        // await startPayment({\n        //     setError,\n        //     setTxs,\n        //     ether: \"0.01\",\n        //     addr: candidateAdd\n        // });\n\n    };\n    return (\n        <Base title=\"Voting page\" description=\"A page for user to vote!\">\n            {/* {console.log(user, \"hi\")} */}\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-sm-3 text-left\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label className=\"text-light\">voterID</label>\n                            <input\n                                onChange={handleChange(\"voterID\")}\n                                value={voterID}\n                                className=\"form-control\"\n                                type=\"text\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"text-light\">electionID</label>\n                            <input\n                                onChange={handleChange(\"electionID\")}\n                                value={electionID}\n                                className=\"form-control\"\n                                type=\"text\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"text-light\">Party</label>\n                            {/* <input\n                                onChange={handleChange(\"candidateID\")}\n                                value={candidateID}\n                                className=\"form-control\"\n                                type=\"text\"\n                            /> */}\n                            <select className=\"custom-select mr-sm-2\" onChange={handleChange(\"candidateID\")}>\n                                <option >Choose...</option>\n                                {/* {console.log(arr)} */}\n                                {arr.map((candidate, index) => {\n                                    // console.log(candidate);\n                                    return <option key={index} value={candidate.candidateID}>{candidate.party}</option>\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"text-light\">candidateAdd</label>\n                            <input\n                                onChange={handleChange(\"candidateAdd\")}\n                                value={candidateAdd}\n                                className=\"form-control\"\n                                type=\"text\"\n                            />\n                        </div>\n                        {errorMessage()}\n                        <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n                            Submit\n                        </button>\n\n                        <ErrorMessage message={error} />\n                        <TxList txs={txs} />\n                    </form>\n\n                </div>\n            </div>\n\n        </Base>\n    );\n};\n\nexport default Vote;","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\user\\Signin.js",["98","99"],[],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    voterID: \"105\",\n    password: \"test123\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n\n  const { voterID, password, error, loading, didRedirect } = values;\n  // const { user } = isAutheticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    console.log(values);\n    signin({ voterID, password })\n      .then(data => {\n        console.log(data);\n        if (data.success === 0) {\n          setValues({ ...values, error: data.data, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n          });\n        }\n      })\n      .catch((err) => console.log(err))\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      return <Redirect to=\"/vote\" />;\n    }\n    // if (isAutheticated()) {\n    //   return <Redirect to=\"/\" />;\n    // }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: values.error ? \"\" : \"none\" }}\n          >\n            {values.error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">voterID</label>\n              <input\n                onChange={handleChange(\"voterID\")}\n                value={voterID}\n                className=\"form-control\"\n                type=\"text\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type=\"password\"\n              />\n            </div>\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\transaction\\Transaction.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\backend.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\ErrorMessage.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Base.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\transaction\\TxList.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\TxList.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\transaction\\ErrorMessage.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\helper\\coreapicalls.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\helper\\ImageHelper.js",["100","101","102"],[],"import React from 'react'\n// import { API } from '../../backend';\nimport BJP from '../../images/BJP.png'\nimport BSP from '../../images/BSP.png'\nimport INC from '../../images/INC.png'\n\nconst ImageHelper = ({ name }) => {\n    // const imageurl = movie?`${API}/movie/photo/${movie.movie_id}`:\"\";\n    console.log(name);\n    let image = \"\";\n    if (name == \"BJP\") {\n        image = BJP;\n    }\n    else if (name == \"BSP\") {\n        image = BSP;\n    }\n    else if (name == \"INC\") {\n        image = INC;\n    }\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} className=\"rounded border border-dark p-2\">\n            <img\n                src={image}\n                alt=\"movie\"\n                style={{ width: \"200px\" }}\n                className=\"mb-3 rounded\"\n            />\n        </div>\n    )\n}\n\nexport default ImageHelper;","C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\auth\\helper\\index.js",[],[],"C:\\Users\\Sonia\\OneDrive\\Desktop\\5th sem\\Blockchain based online voting system\\votingFrontend-main\\src\\core\\Menu.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":42,"column":8,"nodeType":"109","endLine":42,"endColumn":10,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"111","line":5,"column":32,"nodeType":"105","messageId":"106","endLine":5,"endColumn":46},{"ruleId":"103","severity":1,"message":"112","line":16,"column":30,"nodeType":"105","messageId":"106","endLine":16,"endColumn":35},{"ruleId":"113","severity":1,"message":"114","line":11,"column":14,"nodeType":"115","messageId":"116","endLine":11,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":14,"column":19,"nodeType":"115","messageId":"116","endLine":14,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":17,"column":19,"nodeType":"115","messageId":"116","endLine":17,"endColumn":21},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'load'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'isAutheticated' is defined but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"118","fix":"119"},"Update the dependencies array to be: [load]",{"range":"120","text":"121"},[1293,1295],"[load]"]